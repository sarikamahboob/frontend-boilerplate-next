name: Release and Docker Image CI/CD

on:
  push:
    branches: ['main']  # Update this to your release branch

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Debug Logs
        run: echo "::set-env name=ACTIONS_RUNNER_DEBUG::true"

      - name: Branch name (Informational)
        run: echo Running on branch ${GITHUB_REF_NAME}

      - id: release  # Capture the release information
        uses: GoogleCloudPlatform/release-please-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: standard-version

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies (for release script, if needed)
        run: npm ci
        if: ${{ steps.release.outputs.release_created }}

      - name: Run release script (modify based on your setup)
        run: npm run release  # Modify this command if needed
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: npm clean-install

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ steps.release.outputs.release_created }}  # Only setup Buildx if a release is created

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/frontend-boilerplate:${{ steps.release.outputs.tag || github.sha }}  # Use release tag or commit SHA
        if: ${{ steps.release.outputs.release_created }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ steps.release.outputs.release_created }}  # Only login if a release is created

      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/frontend-boilerplate:${{ steps.release.outputs.tag || github.sha }}
        if: ${{ steps.release.outputs.release_created }}
