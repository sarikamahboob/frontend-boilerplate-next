# name: Release and Docker Image CI/CD

# on:
#   push:
#     branches: ['main']  # Update this to your release branch

# jobs:
#   release:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Branch name (Informational)
#         run: echo Running on branch ${GITHUB_REF_NAME}

#       - id: release  # Capture the release information
#         uses: GoogleCloudPlatform/release-please-action@v3
#         with:
#           token: ${{ secrets.HUB_TOKEN }}
#           release-type: node
#           package-name: standard-version

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "lts/*"

#       - name: Set GitHub user
#         run: |
#           git config --global user.name "github-actions[bot]"
#           git config --global user.email "github-actions[bot]@users.noreply.github.com"

#       - name: Install dependencies (for release script, if needed)
#         run: npm ci
#         if: ${{ steps.release.outputs.release_created }}

#       - name: Run release script (modify based on your setup)
#         run: npm run release  # Modify this command if needed
#         if: ${{ steps.release.outputs.release_created }}
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

#       - name: Install dependencies
#         run: npm clean-install

#       - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
#         run: npm audit signatures

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#         if: ${{ steps.release.outputs.release_created }}  # Only setup Buildx if a release is created

#       - name: Build the Docker image
#         run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/frontend-boilerplate:${{ steps.release.outputs.tag || github.sha }}  # Use release tag or commit SHA
#         if: ${{ steps.release.outputs.release_created }}

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#         if: ${{ steps.release.outputs.release_created }}  # Only login if a release is created

#       - name: Docker Push
#         run: docker push ${{ secrets.DOCKER_USERNAME }}/frontend-boilerplate:${{ steps.release.outputs.tag || github.sha }}
#         if: ${{ steps.release.outputs.release_created }}

# name: Release and Docker Image CI/CD

# on:
#   push:
#     branches: ['main']

# jobs:
#   release:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Branch name 
#         run: echo Running on branch ${GITHUB_REF_NAME}

#       - id: release
#         uses: GoogleCloudPlatform/release-please-action@v3
#         with:
#           token: ${{ secrets.HUB_TOKEN }}
#           release-type: node
#           package-name: standard-version
#         # outputs:
#         #   release-created: ${{ steps.release.outputs.release_created }}

#       - name: Set GitHub user
#         run: |
#           git config --global user.name "github-actions[bot]"
#           git config --global user.email "github-actions[bot]@users.noreply.github.com"

#       - name: Install dependencies
#         run: npm ci --clean

#       - name: Run release script 
#         run: npm run release
#         # env:
#         #   NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Build the Docker image
#         run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/frontend-boilerplate:${GITHUB_REF_NAME}

#       - name: Docker Push
#         run: docker push ${{ secrets.DOCKER_USERNAME }}/frontend-boilerplate:${GITHUB_REF_NAME}


name: Release and Docker Image CI/CD

on:
  push:
    branches: ['main']

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Branch name 
        run: echo Running on branch ${GITHUB_REF_NAME}

      - name: Configure committer
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Bump version
        uses: qzb/standard-version-action@v1.0.5

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.HUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/frontend-boilerplate:${GITHUB_REF_NAME}

      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/frontend-boilerplate:${GITHUB_REF_NAME}
